}
#master_df = NULL
#write.csv(master_df, 'all_mr_results.csv', rownames=F)
View(ao)
View(ao)
View(ao)
files = list.files("results")
for (file in files){
df = read.csv(paste0("results\\",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("results\\",file), stringsAsFactors = F)
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, "c:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\df_merged.csv")
files = list.files("results")
for (file in files){
df = read.csv(paste0("results\\",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("results\\",file), stringsAsFactors = F)
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, "c:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\df_merged.csv")
getwd()
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
unique(results$exposure0
)
unique(results$exposure)
files = list.files("results")
for (file in files){
df = read.csv(paste0("results\\",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("results\\",file), stringsAsFactors = F)
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, "c:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\df_merged.csv")
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
nrow(results)
a = read.csv('Results/vegetariandiettype1.csv')
View(a)
a = read.csv('Results/bmitype1.csv')
View(a)
files = list.files("results")
for (file in files){
df = read.csv(paste0("results\\",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("results\\",file), stringsAsFactors = F)
stop('a')
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, "c:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\df_merged.csv")
df
files = list.files("results")
for (file in files){
df = read.csv(paste0("results\\",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("results\\",file), stringsAsFactors = F)
stop('a')
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
df
files
files
files = list.files("results")
files
list.files()
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results\\",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results\\",file), stringsAsFactors = F)
stop('a')
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
df
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results\\",file), stringsAsFactors = F)
}
getwd()
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
stop('a')
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
df
files
file = "bmitype2.csv"
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
View(df)
df[df$method == 'Inverse variance weighted',]
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
df = df[df$method == 'Inverse variance weighted',]
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, "c:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\df_merged.csv")
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
write.csv('df_merged.csv')
write.csv(df_merged, 'df_merged.csv')
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
df = df[df$method == 'Inverse variance weighted',]
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
df = df[df$method == 'Inverse variance weighted',]
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
df = df[df$method == 'Inverse variance weighted',]
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, 'df_merged.csv')
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
nrow(results)
results$pvala = results$pval *27
View(results)
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
df = df[df$method == 'Inverse variance weighted',]
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, 'df_merged.csv')
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
View(ao)
## diabetes, type 1, type 2, potentially other factors
library(TwoSampleMR)
ao = available_outcomes() # contains all the IDs for exposure and outcome
# exposures: depression
# outcomes: How it affects outcomes of Type 1 and Type 2 diabetes
## Extract a list of variants which influence the exposure
exposure_id = 'ukb-d-20499'
# exposure_variants - a table of variants which influence the exposure, and the size of the influence of these
# .. variants on the exposure.
exposure_variants = extract_instruments(exposure_id)
# apply clumping to make sure that all the variants are independent
exposure_variants = clump_data(exposure_variants)
outcome_id = 'ebi-a-GCST005536' # type 1 diabetes
effect_of_exposure_variants_on_outcome = extract_outcome_data(exposure_variants$SNP, outcome_id)
# table of SNPs with their effect on the outcome and on the exposure
# .. this is created by merging the tables we previously extracted
variants_merged = harmonise_data(exposure_variants, effect_of_exposure_variants_on_outcome)
write.csv(variants_merged, 'C:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\Results\\celiacdiseasetype1_variance_merged.csv', row.names = F)
# now use the table of SNPs with their effect on outcome and exposure to perform mendelian randomization analysis
results = mr(variants_merged)
write.csv(results, 'C:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\Results\\celiacdiseasetype1.csv', row.names = F)
write.csv(variants_merged, 'Results/stresstype1_variants.csv', row.names = F)
variants_merged = harmonise_data(exposure_variants, effect_of_exposure_variants_on_outcome)
exposure_variants
effect_of_exposure_variants_on_outcome
outcome_id = 'ebi-a-GCST005536' # type 1 diabetes
effect_of_exposure_variants_on_outcome = extract_outcome_data(exposure_variants$SNP, outcome_id)
variants_merged = harmonise_data(exposure_variants, effect_of_exposure_variants_on_outcome)
effect_of_exposure_variants_on_outcome = extract_outcome_data(exposure_variants$SNP, outcome_id)
effect_of_exposure_variants_on_outcome
extract_outcome_data(exposure_variants$SNP, outcome_id)
exposure_variants$SNP
outcome_id
extract_outcome_data(exposure_variants$SNP, outcome_id)
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
df = df[df$method == 'Inverse variance weighted',]
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, 'df_merged.csv')
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
## diabetes, type 1, type 2, potentially other factors
library(TwoSampleMR)
#ao = available_outcomes() # contains all the IDs for exposure and outcome
# exposures: depression
# outcomes: How it affects outcomes of Type 1 and Type 2 diabetes
## Extract a list of variants which influence the exposure
exposure_id = 'ebi-a-GCST005536'
# exposure_variants - a table of variants which influence the exposure, and the size of the influence of these
# .. variants on the exposure.
exposure_variants = extract_instruments(exposure_id)
# apply clumping to make sure that all the variants are independent
exposure_variants = clump_data(exposure_variants)
outcome_id = 'ebi-a-GCST005536' # type 1 diabetes
outcome_id = 'ebi-a-GCST006867' # type 2 diabetes
effect_of_exposure_variants_on_outcome = extract_outcome_data(exposure_variants$SNP, outcome_id)
# table of SNPs with their effect on the outcome and on the exposure
# .. this is created by merging the tables we previously extracted
variants_merged = harmonise_data(exposure_variants, effect_of_exposure_variants_on_outcome)
#write.csv(variants_merged, 'C:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\Results\\celiacdiseasetype1_variance_merged.csv', row.names = F)
write.csv(variants_merged, 'Results/vascularproblems_type2_variants.csv', row.names = F)
# now use the table of SNPs with their effect on outcome and exposure to perform mendelian randomization analysis
results = mr(variants_merged)
#write.csv(results, 'C:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\Results\\celiacdiseasetype1.csv', row.names = F)
write.csv(results, 'Results/vascularproblems_type2.csv', row.names = F)
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
df = df[df$method == 'Inverse variance weighted',]
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, 'df_merged.csv')
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
## diabetes, type 1, type 2, potentially other factors
library(TwoSampleMR)
#ao = available_outcomes() # contains all the IDs for exposure and outcome
# exposures: depression
# outcomes: How it affects outcomes of Type 1 and Type 2 diabetes
## Extract a list of variants which influence the exposure
exposure_id = 'ukb-b-14177'
# exposure_variants - a table of variants which influence the exposure, and the size of the influence of these
# .. variants on the exposure.
exposure_variants = extract_instruments(exposure_id)
# apply clumping to make sure that all the variants are independent
exposure_variants = clump_data(exposure_variants)
outcome_id = 'ebi-a-GCST005536' # type 1 diabetes
outcome_id = 'ebi-a-GCST006867' # type 2 diabetes
effect_of_exposure_variants_on_outcome = extract_outcome_data(exposure_variants$SNP, outcome_id)
# table of SNPs with their effect on the outcome and on the exposure
# .. this is created by merging the tables we previously extracted
variants_merged = harmonise_data(exposure_variants, effect_of_exposure_variants_on_outcome)
#write.csv(variants_merged, 'C:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\Results\\celiacdiseasetype1_variance_merged.csv', row.names = F)
write.csv(variants_merged, 'Results/vascularproblems_type2_variants.csv', row.names = F)
# now use the table of SNPs with their effect on outcome and exposure to perform mendelian randomization analysis
results = mr(variants_merged)
#write.csv(results, 'C:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\Results\\celiacdiseasetype1.csv', row.names = F)
write.csv(results, 'Results/vascularproblems_type2.csv', row.names = F)
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
df = df[df$method == 'Inverse variance weighted',]
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, 'df_merged.csv')
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
View(ao)
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
df = df[df$method == 'Inverse variance weighted' || df$method == 'Wald ratio',]
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, 'df_merged.csv')
write.csv(df_merged, "c:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\df_merged.csv")
df
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
df = df[df$method == 'Inverse variance weighted' | df$method == 'Wald ratio',]
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, 'df_merged.csv')
write.csv(df_merged, "c:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\df_merged.csv")
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
## diabetes, type 1, type 2, potentially other factors
library(TwoSampleMR)
#ao = available_outcomes() # contains all the IDs for exposure and outcome
# exposures: depression
# outcomes: How it affects outcomes of Type 1 and Type 2 diabetes
## Extract a list of variants which influence the exposure
exposure_id = 'ieu-a-1187'
# exposure_variants - a table of variants which influence the exposure, and the size of the influence of these
# .. variants on the exposure.
exposure_variants = extract_instruments(exposure_id)
# apply clumping to make sure that all the variants are independent
exposure_variants = clump_data(exposure_variants)
outcome_id = 'ebi-a-GCST005536' # type 1 diabetes
##outcome_id = 'ebi-a-GCST006867' # type 2 diabetes
effect_of_exposure_variants_on_outcome = extract_outcome_data(exposure_variants$SNP, outcome_id)
# table of SNPs with their effect on the outcome and on the exposure
# .. this is created by merging the tables we previously extracted
variants_merged = harmonise_data(exposure_variants, effect_of_exposure_variants_on_outcome)
#write.csv(variants_merged, 'C:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\Results\\celiacdiseasetype1_variance_merged.csv', row.names = F)
write.csv(variants_merged, 'Results/major_depression_type1.csv', row.names = F)
# now use the table of SNPs with their effect on outcome and exposure to perform mendelian randomization analysis
results = mr(variants_merged)
#write.csv(results, 'C:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\Results\\celiacdiseasetype1.csv', row.names = F)
write.csv(results, 'Results/major_depression_type1.csv', row.names = F)
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
df = df[df$method == 'Inverse variance weighted' | df$method == 'Wald ratio',]
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, 'df_merged.csv')
write.csv(df_merged, "c:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\df_merged.csv")
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
## diabetes, type 1, type 2, potentially other factors
library(TwoSampleMR)
#ao = available_outcomes() # contains all the IDs for exposure and outcome
# exposures: depression
# outcomes: How it affects outcomes of Type 1 and Type 2 diabetes
## Extract a list of variants which influence the exposure
exposure_id = 'ukb-b-13932'
# exposure_variants - a table of variants which influence the exposure, and the size of the influence of these
# .. variants on the exposure.
exposure_variants = extract_instruments(exposure_id)
# apply clumping to make sure that all the variants are independent
exposure_variants = clump_data(exposure_variants)
outcome_id = 'ebi-a-GCST005536' # type 1 diabetes
##outcome_id = 'ebi-a-GCST006867' # type 2 diabetes
effect_of_exposure_variants_on_outcome = extract_outcome_data(exposure_variants$SNP, outcome_id)
# table of SNPs with their effect on the outcome and on the exposure
# .. this is created by merging the tables we previously extracted
variants_merged = harmonise_data(exposure_variants, effect_of_exposure_variants_on_outcome)
#write.csv(variants_merged, 'C:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\Results\\celiacdiseasetype1_variance_merged.csv', row.names = F)
write.csv(variants_merged, 'Results/vigorousactivitydurationtype2_variants.csv', row.names = F)
# now use the table of SNPs with their effect on outcome and exposure to perform mendelian randomization analysis
results = mr(variants_merged)
#write.csv(results, 'C:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\Results\\celiacdiseasetype1.csv', row.names = F)
write.csv(results, 'Results/vigorousactivitydurationtype2.csv', row.names = F)
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
df = df[df$method == 'Inverse variance weighted' | df$method == 'Wald ratio',]
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, 'df_merged.csv')
write.csv(df_merged, "c:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\df_merged.csv")
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
files = list.files("Results")
for (file in files){
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
}
df_merged = NA
for (file in files) {
df = read.csv(paste0("Results/",file), stringsAsFactors = F)
df = df[df$method == 'Inverse variance weighted' | df$method == 'Wald ratio',]
if (is.data.frame(df_merged) == F) {
df_merged = df
} else {
df_merged = rbind(df_merged,df)
}
}
write.csv(df_merged, 'df_merged.csv')
write.csv(df_merged, "c:\\Users\\Amulya\\Documents\\GitHub\\diabetes_mr\\df_merged.csv")
setwd('~/Documents/amulya/diabetes_mr/')
results = read.csv('df_merged.csv')
View(results)
nrow(results)
2.594046e-03*20
0.05/nrow(results)
0.0025*100
0.259results[19,]
results[19,]
View(ao)
